1 #1 #include
2 #6 "
3 #4 ClassField.h
4 #6 "
5 #1 #include
6 #6 "
7 #4 profile.h
8 #6 "
9 #1 #include
10 #6 <
11 #1 algorithm
12 #6 >
13 #1 #include
14 #6 <
15 #1 iostream
16 #6 >
17 #1 #include
18 #6 <
19 #1 vector
20 #6 >
21 #1 #include
22 #6 <
23 #1 cmath
24 #6 >
25 #1 #include
26 #6 <
27 #1 ctime
28 #6 >
29 #1 #include
30 #6 <
31 #1 map
32 #6 >
33 #1 #include
34 #6 <
35 #1 set
36 #6 >
37 #2 using
38 #2 namespace
39 #1 std
40 #5 ;
41 #2 const
42 #2 int
43 #1 Number_Of_Command
44 #1 =
45 #4 500
46 #5 ;
47 #2 int
48 #1 main
49 #6 (
50 #6 )
51 #6 {
52 #1 srand
53 #6 (
54 #1 time
55 #6 (
56 #4 0
57 #6 )
58 #6 )
59 #5 ;
60 #1 setlocale
61 #6 (
62 #1 LC_ALL
63 #5 ,
64 #6 "
65 #4 RUS
66 #6 "
67 #6 )
68 #5 ;
69 #2 int
70 #1 Size_Of_Field
71 #1 =
72 #4 0
73 #5 ;
74 #1 cout
75 #6 <
76 #6 <
77 #6 "
78 #4 Input size: 
79 #6 "
80 #5 ;
81 #1 cin
82 #6 >
83 #6 >
84 #1 Size_Of_Field
85 #5 ;
86 #1 vector
87 #6 <
88 #2 char
89 #6 >
90 #1 Real_Values
91 #1 =
92 #6 {
93 #6 '
94 #1 _
95 #6 '
96 #6 }
97 #5 ;
98 #2 char
99 #1 value
100 #5 ;
101 #1 cout
102 #6 <
103 #6 <
104 #6 "
105 #4 Input values: 
106 #6 "
107 #5 ;
108 #2 for
109 #6 (
110 #1 size_t
111 #1 i
112 #1 =
113 #4 0
114 #5 ;
115 #1 i
116 #6 <
117 #1 Size_Of_Field
118 #5 ;
119 #1 i++
120 #6 )
121 #6 {
122 #1 cin
123 #6 >
124 #6 >
125 #1 value
126 #5 ;
127 #1 Real_Values
128 #5 .
129 #1 push_back
130 #6 (
131 #1 value
132 #6 )
133 #5 ;
134 #6 }
135 #2 if
136 #6 (
137 #1 sqrt
138 #6 (
139 #1 Size_Of_Field
140 #6 )
141 #2 ==
142 #2 int
143 #6 (
144 #1 sqrt
145 #6 (
146 #1 Size_Of_Field
147 #6 )
148 #6 )
149 #6 )
150 #6 {
151 #1 Field
152 #1 field
153 #6 (
154 #1 Size_Of_Field
155 #5 ,
156 #1 sqrt
157 #6 (
158 #1 Size_Of_Field
159 #6 )
160 #6 )
161 #5 ;
162 #2 for
163 #6 (
164 #2 int
165 #1 i
166 #1 =
167 #4 0
168 #5 ;
169 #1 i
170 #6 <
171 #1 Number_Of_Command
172 #5 ;
173 #1 i++
174 #6 )
175 #6 {
176 #2 int
177 #1 value
178 #1 =
179 #1 rand
180 #6 (
181 #6 )
182 #2 %
183 #4 5
184 #2 +
185 #4 1
186 #5 ;
187 #2 int
188 #1 x
189 #1 =
190 #1 rand
191 #6 (
192 #6 )
193 #2 %
194 #2 int
195 #6 (
196 #1 sqrt
197 #6 (
198 #1 Size_Of_Field
199 #6 )
200 #6 )
201 #5 ;
202 #2 int
203 #1 y
204 #1 =
205 #1 rand
206 #6 (
207 #6 )
208 #2 %
209 #2 int
210 #6 (
211 #1 sqrt
212 #6 (
213 #1 Size_Of_Field
214 #6 )
215 #6 )
216 #5 ;
217 #2 switch
218 #6 (
219 #1 value
220 #6 )
221 #6 {
222 #2 case
223 #4 1
224 #5 :
225 #1 field
226 #5 .
227 #1 tr_field
228 #6 (
229 #6 )
230 #5 ;
231 #2 continue
232 #5 ;
233 #2 case
234 #4 2
235 #5 :
236 #1 field
237 #5 .
238 #1 changeX
239 #6 (
240 #1 x
241 #5 ,
242 #1 y
243 #6 )
244 #5 ;
245 #2 continue
246 #5 ;
247 #2 case
248 #4 3
249 #5 :
250 #1 field
251 #5 .
252 #1 changeY
253 #6 (
254 #1 x
255 #5 ,
256 #1 y
257 #6 )
258 #5 ;
259 #2 continue
260 #5 ;
261 #2 case
262 #4 4
263 #5 :
264 #1 field
265 #5 .
266 #1 changeXblock
267 #6 (
268 #1 x
269 #5 ,
270 #1 y
271 #5 ,
272 #1 sqrt
273 #6 (
274 #1 Size_Of_Field
275 #6 )
276 #6 )
277 #5 ;
278 #2 continue
279 #5 ;
280 #2 case
281 #4 5
282 #5 :
283 #1 field
284 #5 .
285 #1 changeYblock
286 #6 (
287 #1 x
288 #5 ,
289 #1 y
290 #5 ,
291 #1 sqrt
292 #6 (
293 #1 Size_Of_Field
294 #6 )
295 #6 )
296 #5 ;
297 #6 }
298 #6 }
299 #1 vector
300 #6 <
301 #1 vector
302 #6 <
303 #2 int
304 #6 >
305 #6 >
306 #1 VExample
307 #1 =
308 #1 field
309 #5 .
310 #1 Get_Field
311 #6 (
312 #6 )
313 #5 ;
314 #1 DelElems
315 #6 (
316 #1 VExample
317 #6 )
318 #5 ;
319 #2 for
320 #6 (
321 #2 auto
322 #1 Str
323 #5 :
324 #1 VExample
325 #6 )
326 #6 {
327 #2 for
328 #6 (
329 #2 auto
330 #1 i
331 #5 :
332 #1 Str
333 #6 )
334 #6 {
335 #1 cout
336 #6 <
337 #6 <
338 #1 Real_Values
339 #6 [
340 #1 i
341 #6 ]
342 #6 <
343 #6 <
344 #6 "
345 #4  
346 #6 "
347 #5 ;
348 #6 }
349 #1 cout
350 #6 <
351 #6 <
352 #1 endl
353 #5 ;
354 #6 }
355 #1 MakeVector
356 #6 (
357 #1 VExample
358 #6 )
359 #5 ;
360 #1 cout
361 #6 <
362 #6 <
363 #1 endl
364 #6 <
365 #6 <
366 #1 endl
367 #5 ;
368 #2 for
369 #6 (
370 #2 auto
371 #1 Str
372 #5 :
373 #1 VExample
374 #6 )
375 #6 {
376 #2 for
377 #6 (
378 #2 auto
379 #1 i
380 #5 :
381 #1 Str
382 #6 )
383 #6 {
384 #1 cout
385 #6 <
386 #6 <
387 #1 Real_Values
388 #6 [
389 #1 i
390 #6 ]
391 #6 <
392 #6 <
393 #6 "
394 #4  
395 #6 "
396 #5 ;
397 #6 }
398 #1 cout
399 #6 <
400 #6 <
401 #1 endl
402 #5 ;
403 #6 }
404 #6 }
405 #2 else
406 #6 {
407 #1 Field
408 #1 field
409 #6 (
410 #1 Size_Of_Field
411 #6 )
412 #5 ;
413 #2 for
414 #6 (
415 #2 int
416 #1 i
417 #1 =
418 #4 0
419 #5 ;
420 #1 i
421 #6 <
422 #1 Number_Of_Command
423 #5 ;
424 #1 i++
425 #6 )
426 #6 {
427 #2 int
428 #1 value
429 #1 =
430 #1 rand
431 #6 (
432 #6 )
433 #2 %
434 #4 3
435 #2 +
436 #4 1
437 #5 ;
438 #2 int
439 #1 x
440 #1 =
441 #1 rand
442 #6 (
443 #6 )
444 #2 %
445 #1 Size_Of_Field
446 #5 ;
447 #2 int
448 #1 y
449 #1 =
450 #1 rand
451 #6 (
452 #6 )
453 #2 %
454 #1 Size_Of_Field
455 #5 ;
456 #2 switch
457 #6 (
458 #1 value
459 #6 )
460 #6 {
461 #2 case
462 #4 1
463 #5 :
464 #1 field
465 #5 .
466 #1 tr_field
467 #6 (
468 #6 )
469 #5 ;
470 #2 continue
471 #5 ;
472 #2 case
473 #4 2
474 #5 :
475 #1 field
476 #5 .
477 #1 changeX
478 #6 (
479 #1 x
480 #5 ,
481 #1 y
482 #6 )
483 #5 ;
484 #2 continue
485 #5 ;
486 #2 case
487 #4 3
488 #5 :
489 #1 field
490 #5 .
491 #1 changeY
492 #6 (
493 #1 x
494 #5 ,
495 #1 y
496 #6 )
497 #5 ;
498 #6 }
499 #6 }
500 #1 vector
501 #6 <
502 #1 vector
503 #6 <
504 #2 int
505 #6 >
506 #6 >
507 #1 VExample
508 #1 =
509 #1 field
510 #5 .
511 #1 Get_Field
512 #6 (
513 #6 )
514 #5 ;
515 #1 DelElems
516 #6 (
517 #1 VExample
518 #6 )
519 #5 ;
520 #2 for
521 #6 (
522 #2 auto
523 #1 Str
524 #5 :
525 #1 VExample
526 #6 )
527 #6 {
528 #2 for
529 #6 (
530 #2 auto
531 #1 i
532 #5 :
533 #1 Str
534 #6 )
535 #6 {
536 #1 cout
537 #6 <
538 #6 <
539 #1 Real_Values
540 #6 [
541 #1 i
542 #6 ]
543 #6 <
544 #6 <
545 #6 "
546 #4  
547 #6 "
548 #5 ;
549 #6 }
550 #1 cout
551 #6 <
552 #6 <
553 #1 endl
554 #5 ;
555 #6 }
556 #1 MakeVector
557 #6 (
558 #1 VExample
559 #6 )
560 #5 ;
561 #1 cout
562 #6 <
563 #6 <
564 #1 endl
565 #6 <
566 #6 <
567 #1 endl
568 #5 ;
569 #2 for
570 #6 (
571 #2 auto
572 #1 Str
573 #5 :
574 #1 VExample
575 #6 )
576 #6 {
577 #2 for
578 #6 (
579 #2 auto
580 #1 i
581 #5 :
582 #1 Str
583 #6 )
584 #6 {
585 #1 cout
586 #6 <
587 #6 <
588 #1 Real_Values
589 #6 [
590 #1 i
591 #6 ]
592 #6 <
593 #6 <
594 #6 "
595 #4  
596 #6 "
597 #5 ;
598 #6 }
599 #1 cout
600 #6 <
601 #6 <
602 #1 endl
603 #5 ;
604 #6 }
605 #6 }
606 #2 return
607 #4 0
608 #5 ;
609 #6 }
